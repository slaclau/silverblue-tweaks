#!/bin/bash

########
## Function to generate a choice selection and return the selected choice
########
# CHOICE=$(Choice option1 option2 "option 3")
# *user selects "option 3"*
# echo "$CHOICE" will return "option 3"
function Choose (){
    CHOICE=$(ugum choose "$@")
    echo "$CHOICE"
}

########
## Function to generate a confirm dialog and return the selected choice
########
# CHOICE=$(Confirm "Are you sure you want to do this?")
# *user selects "No"*
# echo "$CHOICE" will return "1"
# 0 = Yes
# 1 = No
function Confirm (){
    ugum confirm "$@"
    echo $?
}

STATUS=$(rpm-ostree status -b --json | jq -r '.deployments.[0]')
IMAGE=$(jq -r '."container-image-reference"' <<< $STATUS | sed 's$.*//$$g')
IFS="/" read -a IMAGE_PARTS <<< $IMAGE; unset IFS

IMAGE_VENDOR=${IMAGE_PARTS[1]}
IMAGE_REGISTRY=${IMAGE_PARTS[0]}/${IMAGE_VENDOR}
IMAGE_NAME=$(sed 's/:.*//g' <<< ${IMAGE_PARTS[2]})
IMAGE_TAG=$(sed 's/.*://g' <<< ${IMAGE_PARTS[2]})

VERSION=$(jq -r .version <<< $STATUS | sed 's/.*-//g')
FEDORA_VERSION=$(sed 's/\..*//g' <<< $VERSION)

function list_tags(){
    skopeo list-tags "docker://${IMAGE_REGISTRY}/${IMAGE_NAME}" \
      | grep -E --color=never -- "$FEDORA_VERSION-([0-9]+)" \
      | grep -E --color=never -v -- "$FEDORA_VERSION-$FEDORA_VERSION\.([0-9]+)" \
      | sort -rV | head -n 31
}

function rebase_helper(){
    base_image="${IMAGE_REGISTRY}/${IMAGE_NAME}"
    echo "Which Tag would you like to rebase to?"
    CHANNELS=(latest stable stable-daily gts)
    echo "The default selection is gts, stable (weekly builds) and stable-daily (daily builds) are for enthusiasts, and latest is for testers"
    choose_target=$(Choose date "${CHANNELS[@]}" cancel)
    if [[ "$choose_target" != "date" && "$choose_target" != "cancel" ]]; then
        rebase_target="${base_image}:${choose_target}"
    elif [[ "$choose_target" == "date" ]]; then
        # shellcheck disable=SC2207
        echo "Warning: This will pin you to a specific version, do not forget to rebase back to a channel to resume receiving updates."
        valid_tags=( $(list_tags | sed 's/\"//g' | sed 's/,//g'))
        target_tag=$(Choose cancel "${valid_tags[@]}")
        if  grep -Eq "$FEDORA_VERSION-([0-9]+)" <<< "${target_tag}"; then
            # target_tag=${target_tag:1:-2}
            rebase_target="${base_image}:$target_tag"
        else
            return 1
        fi
    else
        return 1
    fi
    if  [[ "$choose_target" =~ "gts" && "$IMAGE_TAG" != "$choose_target" ]]; then
        echo "Warning rolling back Major Fedora Versions may not work"
    fi
    echo "Rebase Target is ${rebase_target}"
    echo "Confirm Rebase"
    if [[ $(Confirm) -ne "0" ]]; then
        return 1
    fi

    if /usr/bin/grep "^LockLayering=true" /etc/rpm-ostreed.conf &> /dev/null; then
        pkexec bootc switch --enforce-container-sigpolicy "${rebase_target}"
        return 0
    fi
    rpm-ostree rebase ostree-image-signed:docker://"${rebase_target}"
    return 0
}

function main() {
    echo "Choose your action."
    option=$(Choose rebase cancel)

    if [[ "$option" == "rebase" ]]; then
        rebase_helper || main
    else
        exit 0
    fi
}

main
